"""initial_migration

Revision ID: d2ff42dc7443
Revises: 
Create Date: 2023-08-28 11:43:29.005056

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd2ff42dc7443'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE SCHEMA IF NOT EXISTS prod')
    op.create_table('account',
                    sa.Column('account_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('password', sa.String(length=500), nullable=False),
                    sa.PrimaryKeyConstraint('account_id')
                    )
    op.create_table('listing',
                    sa.Column('listing_id', sa.Integer(), nullable=False),
                    sa.Column('list_price', sa.Integer(), nullable=True),
                    sa.Column('last_price_change', sa.Float(), nullable=True),
                    sa.Column('price_per_square_feet', sa.Float(), nullable=True),
                    sa.Column('listing_date', sa.DateTime(), nullable=True),
                    sa.Column('hoa_fee', sa.Float(), nullable=True),
                    sa.Column('listing_name', sa.String(length=300), nullable=True),
                    sa.Column('listing_type', sa.String(length=300), nullable=True),
                    sa.Column('num_bedrooms', sa.Integer(), nullable=True),
                    sa.Column('num_full_baths', sa.Integer(), nullable=True),
                    sa.Column('num_half_baths', sa.Integer(), nullable=True),
                    sa.Column('num_features', sa.Integer(), nullable=True),
                    sa.Column('parcel_number', sa.String(length=300), nullable=True),
                    sa.Column('zoning_type', sa.String(length=300), nullable=True),
                    sa.Column('property_primary_type', sa.String(length=300), nullable=True),
                    sa.Column('property_secondary_type', sa.String(length=300), nullable=True),
                    sa.Column('estimated_annual_tax', sa.String(length=300), nullable=True),
                    sa.Column('year_built', sa.Integer(), nullable=True),
                    sa.Column('building_area', sa.Float(), nullable=True),
                    sa.Column('building_area_units', sa.String(length=300), nullable=True),
                    sa.Column('foundation_type', sa.String(length=300), nullable=True),
                    sa.Column('construction_materials', sa.String(length=300), nullable=True),
                    sa.Column('roof_type', sa.String(length=300), nullable=True),
                    sa.Column('house_type', sa.String(length=300), nullable=True),
                    sa.Column('lot_description', sa.String(length=300), nullable=True),
                    sa.Column('lot_size_acres', sa.Float(), nullable=True),
                    sa.Column('lot_size_sqft', sa.Float(), nullable=True),
                    sa.Column('address_line', sa.String(length=300), nullable=False),
                    sa.Column('address_street_number', sa.Integer(), nullable=True),
                    sa.Column('address_street_name', sa.String(length=300), nullable=True),
                    sa.Column('address_street_suffix', sa.String(length=300), nullable=True),
                    sa.Column('unit_number', sa.String(length=300), nullable=True),
                    sa.Column('city', sa.String(length=300), nullable=True),
                    sa.Column('state', sa.String(length=300), nullable=True),
                    sa.Column('zip_code', sa.Integer(), nullable=True),
                    sa.Column('county', sa.String(length=300), nullable=True),
                    sa.Column('latitude', sa.Float(), nullable=True),
                    sa.Column('longitude', sa.Float(), nullable=True),
                    sa.Column('property_image', sa.String(length=300), nullable=True),
                    sa.PrimaryKeyConstraint('listing_id')
                    )
    op.create_index(op.f('ix_listing_address_line'), 'listing', ['address_line'], unique=False)
    op.create_table('permit',
                    sa.Column('permit_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('listing_id', sa.Integer(), nullable=True),
                    sa.Column('standardized_address', sa.String(length=300), nullable=True),
                    sa.Column('application_date', sa.DateTime(), nullable=True),
                    sa.Column('issue_date', sa.DateTime(), nullable=True),
                    sa.Column('expiry_date', sa.DateTime(), nullable=True),
                    sa.Column('permit_number', sa.String(length=300), nullable=True),
                    sa.Column('property_address', sa.String(length=300), nullable=True),
                    sa.Column('zone', sa.String(length=300), nullable=True),
                    sa.Column('unit_number', sa.String(length=300), nullable=True),
                    sa.Column('applicant_name', sa.String(length=300), nullable=True),
                    sa.Column('city', sa.String(length=300), nullable=True),
                    sa.Column('applicant_email', sa.String(length=300), nullable=True),
                    sa.Column('applicant_phone', sa.String(length=300), nullable=True),
                    sa.Column('owner_name', sa.String(length=300), nullable=True),
                    sa.Column('owner_street_number', sa.String(length=300), nullable=True),
                    sa.Column('owner_street_name', sa.String(length=300), nullable=True),
                    sa.Column('owner_city', sa.String(length=300), nullable=True),
                    sa.Column('owner_email', sa.String(length=300), nullable=True),
                    sa.Column('owner_phone', sa.String(length=300), nullable=True),
                    sa.Column('owner_fax', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_name', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_street_number', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_street_name', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_city', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_email', sa.String(length=300), nullable=True),
                    sa.Column('business_owner_phone', sa.String(length=300), nullable=True),
                    sa.Column('mailing_address', sa.String(length=300), nullable=True),
                    sa.Column('start_date', sa.DateTime(), nullable=True),
                    sa.Column('description', sa.String(length=300), nullable=True),
                    sa.Column('estimated_cost', sa.Float(), nullable=True),
                    sa.Column('status', sa.String(length=300), nullable=True),
                    sa.Column('inspection', sa.String(length=300), nullable=True),
                    sa.Column('state', sa.String(length=300), nullable=True),
                    sa.Column('zipcode', sa.Integer(), nullable=True),
                    sa.Column('key', sa.Integer(), nullable=True),
                    sa.Column('street_number', sa.Integer(), nullable=True),
                    sa.Column('street_name', sa.String(length=300), nullable=True),
                    sa.Column('street_type', sa.String(length=300), nullable=True),
                    sa.Column('street_direction', sa.String(length=300), nullable=True),
                    sa.Column('permit_standardized_description', sa.String(length=300), nullable=True),
                    sa.PrimaryKeyConstraint('permit_id')
                    )
    op.create_table('address',
                    sa.Column('address_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('property_id', sa.BigInteger(), nullable=True),
                    sa.Column('street_name', sa.String(length=50), nullable=False),
                    sa.Column('street_number', sa.String(length=30), nullable=False),
                    sa.Column('city', sa.String(length=20), nullable=False),
                    sa.Column('state', sa.String(length=30), nullable=False),
                    sa.Column('zip_code', sa.Integer(), nullable=False),
                    sa.Column('street_suffix', sa.String(length=30), nullable=True),
                    sa.Column('st_lookup_str', sa.String(length=300), nullable=False, unique=True),
                    sa.Column('unit', sa.String(length=30), nullable=True),
                    sa.Column('lat', sa.Float(), nullable=True),
                    sa.Column('lon', sa.Float(), nullable=True),
                    sa.PrimaryKeyConstraint('address_id'),
                    schema='prod'
                    )
    op.create_index(op.f('ix_prod_address_city'), 'address', ['city'], unique=False, schema='prod')
    op.create_index(op.f('ix_prod_address_st_lookup_str'), 'address', ['st_lookup_str'], unique=False, schema='prod')
    op.create_index(op.f('ix_prod_address_state'), 'address', ['state'], unique=False, schema='prod')
    op.create_index(op.f('ix_prod_address_street_name'), 'address', ['street_name'], unique=False, schema='prod')
    op.create_index(op.f('ix_prod_address_street_number'), 'address', ['street_number'], unique=False, schema='prod')
    op.create_index(op.f('ix_prod_address_zip_code'), 'address', ['zip_code'], unique=False, schema='prod')
    op.create_table('properties',
                    sa.Column('property_id', sa.String(length=50), nullable=False),
                    sa.Column('state', sa.String(length=2), nullable=False),
                    sa.Column('city', sa.String(length=20), nullable=False),
                    sa.Column('zip_code', sa.String(length=5), nullable=False),
                    sa.Column('street_address', sa.String(length=50), nullable=True),
                    sa.Column('listing_status', sa.String(length=15), nullable=True),
                    sa.Column('last_sold_date', sa.Date(), nullable=True),
                    sa.Column('last_sold_price', sa.Integer(), nullable=True),
                    sa.Column('list_price', sa.Integer(), nullable=True),
                    sa.Column('estimate', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('property_id')
                    )
    op.create_index(op.f('ix_properties_city'), 'properties', ['city'], unique=False)
    op.create_index(op.f('ix_properties_state'), 'properties', ['state'], unique=False)
    op.create_index(op.f('ix_properties_street_address'), 'properties', ['street_address'], unique=False)
    op.create_index(op.f('ix_properties_zip_code'), 'properties', ['zip_code'], unique=False)
    op.create_table('tax',
                    sa.Column('tax_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('year', sa.Integer(), nullable=True),
                    sa.Column('tax', sa.Integer(), nullable=True),
                    sa.Column('assessment_building', sa.Float(), nullable=True),
                    sa.Column('assessment_land', sa.Float(), nullable=True),
                    sa.Column('assessment_total', sa.Integer(), nullable=True),
                    sa.Column('market_building', sa.Integer(), nullable=True),
                    sa.Column('market_land', sa.Integer(), nullable=True),
                    sa.Column('market_total', sa.Integer(), nullable=True),
                    sa.Column('listing_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('tax_id')
                    )
    op.create_table('property',
                    sa.Column('property_id', sa.BigInteger(), nullable=False),
                    sa.Column('realtor_id', sa.String(length=50), nullable=False),
                    sa.Column('url', sa.String(length=500), nullable=True),
                    sa.Column('image', sa.String(length=500), nullable=True),
                    sa.Column('street_view', sa.String(length=500), nullable=True),
                    sa.Column('baths', sa.Float(), nullable=True),
                    sa.Column('beds', sa.Integer(), nullable=True),
                    sa.Column('sqft', sa.Integer(), nullable=True),
                    sa.Column('lot_sqft', sa.Integer(), nullable=True),
                    sa.Column('address_id', sa.BigInteger(), nullable=False),
                    sa.ForeignKeyConstraint(['address_id'], ['prod.address.address_id'], ),
                    sa.PrimaryKeyConstraint('property_id'),
                    schema='prod'
                    )
    op.create_index(op.f('ix_prod_property_realtor_id'), 'property', ['realtor_id'], unique=False, schema='prod')
    op.create_table('session',
                    sa.Column('session_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('start_time', sa.DateTime(), nullable=True),
                    sa.Column('account_id', sa.Integer(), nullable=True),
                    sa.Column('jwt', sa.String(length=500), nullable=True),
                    sa.Column('csrf', sa.String(length=255), nullable=True),
                    sa.ForeignKeyConstraint(['account_id'], ['account.account_id'], ),
                    sa.PrimaryKeyConstraint('session_id')
                    )
    op.create_index(op.f('ix_session_account_id'), 'session', ['account_id'], unique=False)
    op.create_index(op.f('ix_session_csrf'), 'session', ['csrf'], unique=False)
    op.create_index(op.f('ix_session_jwt'), 'session', ['jwt'], unique=False)
    op.create_index(op.f('ix_session_start_time'), 'session', ['start_time'], unique=False)
    op.create_table('listing',
                    sa.Column('listing_id', sa.BigInteger(), nullable=False),
                    sa.Column('property_id', sa.BigInteger(), nullable=False),
                    sa.Column('realtor_id', sa.String(length=50), nullable=False),
                    sa.Column('description', sa.String(length=5000), nullable=True),
                    sa.Column('price', sa.Integer(), nullable=True),
                    sa.Column('status', sa.String(length=100), nullable=True),
                    sa.Column('listing_date', sa.Date(), nullable=True),
                    sa.Column('last_updated', sa.Date(), nullable=True),
                    sa.Column('last_status_change', sa.Date(), nullable=True),
                    sa.ForeignKeyConstraint(['property_id'], ['prod.property.property_id'], ),
                    sa.PrimaryKeyConstraint('listing_id'),
                    schema='prod'
                    )
    op.create_index(op.f('ix_prod_listing_description'), 'listing', ['description'], unique=False, schema='prod')
    op.create_table('tax',
                    sa.Column('tax_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('property_id', sa.BigInteger(), nullable=False),
                    sa.Column('realtor_id', sa.String(length=50), nullable=False),
                    sa.Column('year', sa.Integer(), nullable=False),
                    sa.Column('tax', sa.Integer(), nullable=True),
                    sa.Column('building', sa.Integer(), nullable=True),
                    sa.Column('land', sa.Integer(), nullable=True),
                    sa.Column('assessment', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['property_id'], ['prod.property.property_id'], ),
                    sa.PrimaryKeyConstraint('tax_id'),
                    schema='prod'
                    )
    op.create_index(op.f('ix_prod_tax_year'), 'tax', ['year'], unique=False, schema='prod')
    op.create_table('listing_event',
                    sa.Column('listing_event_id', sa.BigInteger(), autoincrement=True, nullable=False),
                    sa.Column('listing_id', sa.BigInteger(), nullable=False),
                    sa.Column('property_id', sa.BigInteger(), nullable=False),
                    sa.Column('realtor_id', sa.String(length=50), nullable=False),
                    sa.Column('source_listing_id', sa.String(length=50), nullable=False),
                    sa.Column('event_date', sa.Date(), nullable=True),
                    sa.Column('event_type', sa.String(length=100), nullable=True),
                    sa.Column('price', sa.Integer(), nullable=True),
                    sa.Column('source_name', sa.String(length=100), nullable=True),
                    sa.ForeignKeyConstraint(['listing_id'], ['prod.listing.listing_id'], ),
                    sa.ForeignKeyConstraint(['property_id'], ['prod.property.property_id'], ),
                    sa.PrimaryKeyConstraint('listing_event_id'),
                    schema='prod'
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('listing_event', schema='prod')
    op.drop_index(op.f('ix_prod_tax_year'), table_name='tax', schema='prod')
    op.drop_table('tax', schema='prod')
    op.drop_index(op.f('ix_prod_listing_description'), table_name='listing', schema='prod')
    op.drop_table('listing', schema='prod')
    op.drop_index(op.f('ix_session_start_time'), table_name='session')
    op.drop_index(op.f('ix_session_jwt'), table_name='session')
    op.drop_index(op.f('ix_session_csrf'), table_name='session')
    op.drop_index(op.f('ix_session_account_id'), table_name='session')
    op.drop_table('session')
    op.drop_index(op.f('ix_prod_property_realtor_id'), table_name='property', schema='prod')
    op.drop_table('property', schema='prod')
    op.drop_table('tax')
    op.drop_index(op.f('ix_properties_zip_code'), table_name='properties')
    op.drop_index(op.f('ix_properties_street_address'), table_name='properties')
    op.drop_index(op.f('ix_properties_state'), table_name='properties')
    op.drop_index(op.f('ix_properties_city'), table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('ix_prod_address_zip_code'), table_name='address', schema='prod')
    op.drop_index(op.f('ix_prod_address_street_number'), table_name='address', schema='prod')
    op.drop_index(op.f('ix_prod_address_street_name'), table_name='address', schema='prod')
    op.drop_index(op.f('ix_prod_address_state'), table_name='address', schema='prod')
    op.drop_index(op.f('ix_prod_address_st_lookup_str'), table_name='address', schema='prod')
    op.drop_index(op.f('ix_prod_address_city'), table_name='address', schema='prod')
    op.drop_table('address', schema='prod')
    op.drop_table('permit')
    op.drop_index(op.f('ix_listing_address_line'), table_name='listing')
    op.drop_table('listing')
    op.drop_table('account')
    op.execute('DROP SCHEMA IF EXISTS prod')
    # ### end Alembic commands ###
